#+TITLE: Introducción al Embedded Device Hacking
#+AUTHOR: Sergio Conde Gómez
#+EMAIL: skgsergio@gmail.com
#+DATE: Mayo 2016
#+STARTUP: showall
#+OPTIONS: toc:nil num:nil timestamp:nil
#+OPTIONS: reveal_center:nil reveal_progress:t reveal_history:t
#+OPTIONS: reveal_control:t reveal_rolling_links:nil reveal_keyboard:t
#+OPTIONS: reveal_overview:t
#+REVEAL_MARGIN: 0.1
#+REVEAL_MIN_SCALE: 0.5
#+REVEAL_MAX_SCALE: 2.5
#+REVEAL_TRANS: linear
#+REVEAL_SPEED: default
#+REVEAL_THEME: black

#+BEGIN_HTML
<style>
  .reveal section img { border: 0; box-shadow: none; background: none; }
</style>
#+END_HTML

* sconde@acm ~ $ whoami
  * Sergio Conde Gómez
  * Investigador en Seguridad Informática @ CriptoLab, UPM
  * Contacto:
    * Twitter: [[https://twitter.com/skgsergio][@skgsergio]]
    * Telegram: [[http://telegram.me/skgsergio][@skgsergio]]
    * Email: [[mailto:skgsergio@gmail.com][skgsergio@gmail.com]]
  * Quejas: /dev/null

  #+ATTR_HTML: :height 150px
  [[./img/logo_acm.png]]

* ¿De qué va esta charla?
  * _Introducción_ al Embedded Device Hacking
    * WHAT!?
    * ¿Cómo podemos enfrentarnos a ello?
      * Software
      * Hardware
    * Vamos a por el hardware
  * Ejemplo práctico: /Router ONO CH6640E/
    * ¿Qué tiene de interesante?
    * Echando un vistazo al hardware
    * Demo en vivo

* WHAT!?
  /Embedded device hacking is the exploiting of vulnerabilities in embedded
  software (or hardware) to gain control of the device./

  Básicamente... tenemos un hardware que sabemos que ejecuta un sistema
  operativo con la finalidad de hacer /algo/ mediante un software y queremos
  hacernos con el control del hardware y/o software.

  *Ejemplo:* Conseguir super-administración del router.

* ¿Cómo podemos enfrentarnos a ello?
  Principalmente tenemos dos caminos:

  * *Software:* Interactuar con el software en busca de fallos que nos permitan
    controlarlo.
  * *Hardware:* Inspeccionar el hardware buscando poder /conectarnos/ a el y
    decirle que queremos hacer.

** Software
  * Lo típico: 0-day, RCE, ...
  * Si tiene una interfaz web:
    * Inspeccionar el =JavaScript= del cliente
    * root/root, root/1234, root/12345, root/toor, admin/admin,
      admin/nombre-de-la-empresa, ...
  * Analizar el tráfico de red:
    * ¿SSL/TLS?
    * Llamadas a API ⇒ /¿MitM?/
    * Llamadas a /casa/ ⇒ /¿MitM?/
  * Cargar firmware modificado

  Este no es el camino que hemos elegido hoy.

** Hardware (I)
   Hay que identificar chips y ver que podemos hacer con ellos.
   * EEPROM (Serie, I2C, ...): Leer con pinzas.
   * NAND Flash: Lo anterior, pero más lío de cableado.
   * CPU
     * TTL UART: Usada para generalmente para debug (salida de mensajes del
       bootloader y dmesg del kernel) pero con un poco de suerte nos dará acceso
       a un login, panel de configuración o, en ocasiones, incluso podremos
       manipular el bootloader o tener acceso a una shell.

** Hardware (II)
   * CPU
     * JTAG: Puerto de debug común en los sistemas embebidos, generalmente se usa
       para test en el proceso de fabricación. Depende mucho de del SoC/CPU su
       utilidad y generalmente es un puerto de programación del mismo. En
       consolas y móviles ha sido muy útil...

     * USB: Y si conectamos un teclado ¿que pasará?

*** (I) EEPROM
   [[./img/eeprom_i2c.png]]
   [[./img/eeprom_clip.jpg]]

*** (II) NAND
   [[./img/nand_flash.png]]
   [[./img/nand_clip.jpg]]

*** (III) CPU: TTL UART
    * Típicamente: 4 pines
    [[./img/serial_1.jpg]]
    [[./img/serial_2.jpg]]

*** (IV) CPU: JTAG
    * Típicamente: 8, 10, 12, 14 o 16 pines
    [[./img/xbox_jtag.jpg]]

* Vamos a por el hardware
  ¿Y ahora qué? Pues esta es lista de prioridades:

  1. Buscar una conexión *TTL UART* en la placa o en el datasheet.
  2. Buscar un *JTAG*.
  3. Leer las *EEPROM*.
  4. Leer las *NAND*.

  Generalmente si en *1* o *2* consigues una shell no necesitas hacer *3* y *4*
  ya que podrás acceder desde ella.

* /Router ONO CH6640E/
  * ¿Qué tiene de interesante?
    * El funcionamiento del protocolo /DOCSIS/ hace que un compañero y yo nos
      interesemos en él.
    * Tenemos acceso a uno sin dejar una casa sin internet.
    * Estaba empeñado en sacar los datos del SIP de VoIP... pero ya no soy
      cliente de ONO.
  * Charla del /23c3/ muy recomendada donde con el mismo router una vez ha
    conseguido acceso explora *mas allá del cable-router*:
    https://media.ccc.de/v/32c3-7133-beyond_your_cable_modem

* Un vistazo al hardware
  [[./img/router_general.jpg]]

*** Realtek RTL8198: Router
   [[./img/router_rtl.jpg]]

*** Intel DNCE2500GU: Modem DOCSIS 3.0
   [[./img/router_i.jpg]]

*** Manos a la obra
  #+BEGIN_HTML
<div id="webcam">
  <div id="wBtn" style="font-size: small;">
    <a id="wPlay" href="#">▶</a> <a id="wStop" href="#">⏹</a>
  </div>
  <video style="max-width: 100%; max-height: 100%;" id="wVideo" autoplay="true">
  </video>
  <script>
   navigator.getUserMedia = navigator.getUserMedia ||
                            navigator.webkitGetUserMedia ||
                            navigator.mozGetUserMedia ||
                            navigator.msGetUserMedia ||
                            navigator.oGetUserMedia;

   if (navigator.getUserMedia) {
     var wVideo = document.getElementById("wVideo");
     var wPlay = document.getElementById("wPlay");
     var wStop = document.getElementById("wStop");
     var wStream;

     wStop.style.display = "none";

     wPlay.addEventListener("click", function(evt) {
       navigator.getUserMedia(
         {
           video: {
             "width": "1280",
             "height": "720",
             "aspectRatio": 16/9
           },
           audio: false
         },
         function(stream) {
           wVideo.src = window.URL.createObjectURL(stream);
           wStream = stream;
         },
         function(e) { alert("Webcam no inicializada."); }
       );

       wPlay.style.display = "none";
       wStop.style.display = "";

       evt.preventDefault()
     });

     wStop.addEventListener("click", function(evt) {
       wVideo.src = "";
       if (typeof wStream !== "undefined") {
         wStream.getTracks()[0].stop();
       }

       wStop.style.display = "none";
       wPlay.style.display = "";

       evt.preventDefault()
     });
   }
  </script>
</div>
  #+END_HTML

* FIN
  ¿Dudas, ruegos o preguntas?

  * Slides y recursos:
    * https://github.com/skgsergio/ACM-EDH-2016
    * O... https://git.io/vrVfc
  * Contacto:
    * Twitter: [[https://twitter.com/skgsergio][@skgsergio]]
    * Telegram: [[http://telegram.me/skgsergio][@skgsergio]]
    * Email: [[mailto:skgsergio@gmail.com][skgsergio@gmail.com]]
  * Quejas: /dev/null

  ¡Muchas gracias a todos por venir!

** Agradecimientos especiales
   * +A ONO por tocarme las narices y prestarme el router.+
   * A Sergio G. por tocar las narices para que investigásemos el router.
   * Y una mención especial a la persona que me ha soldado los cables para
     facilitarme la vida:

   [[./img/vikingo.png]]
